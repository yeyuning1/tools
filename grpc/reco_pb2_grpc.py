# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import reco_pb2 as reco__pb2


class RecoStub(object):
  """推荐系统服务
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.article_recommand = channel.unary_unary(
        '/Reco/article_recommand',
        request_serializer=reco__pb2.RecoRequestArgs.SerializeToString,
        response_deserializer=reco__pb2.RecoResponseArgs.FromString,
        )


class RecoServicer(object):
  """推荐系统服务
  """

  def article_recommand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RecoServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'article_recommand': grpc.unary_unary_rpc_method_handler(
          servicer.article_recommand,
          request_deserializer=reco__pb2.RecoRequestArgs.FromString,
          response_serializer=reco__pb2.RecoResponseArgs.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Reco', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
